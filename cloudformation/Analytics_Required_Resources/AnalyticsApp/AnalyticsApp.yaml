Parameters:
  GitHubUser:
     Type: String
  GitHubAccessToken:
     Type: String
  GitHubRepo:
     Type: String
  USERPOOLID:
     Type: String
  APPCLIENTID:
     Type: String
  IDENTITYPOOLID:
     Type: String
  URL:
     Type: String
  APINAME:
     Type: String
Resources:
  BuildProject:
    DependsOn: CodeBuildServiceRolePolicy
    Properties:
      Environment:
        ComputeType: BUILD_GENERAL1_SMALL
        EnvironmentVariables:
          - Name: AWS_ACCOUNT_ID
            Value: !Ref 'AWS::AccountId'
          - Name: REGION
            Value: !Ref 'AWS::Region'
          - Name: USER_POOL_ID
            Value: !Ref USERPOOLID
          - Name: APP_CLIENT_ID
            Value: !Ref APPCLIENTID
          - Name: IDENTITY_POOL_ID
            Value: !Ref IDENTITYPOOLID
          - Name: URL
            Value: !Ref URL
          - Name: APINAME
            Value: !Ref APINAME
          - Name: S3_BUCKET
            Value: !Ref HostingBucket1
        Image: aws/codebuild/amazonlinux2-x86_64-standard:1.0
        PrivilegedMode: 'true'
        Type: LINUX_CONTAINER
      ServiceRole: !Ref 'CodeBuildServiceRole'
      Source:
        BuildSpec: buildspec-analytics.yml
        Type: CODEPIPELINE
      Artifacts:
        Type: CODEPIPELINE
    Type: AWS::CodeBuild::Project

  CodeBuildServiceRole:
    Properties:
      AssumeRolePolicyDocument:
        Statement:
          - Action: sts:AssumeRole
            Effect: Allow
            Principal:
              Service: codebuild.amazonaws.com
    Type: AWS::IAM::Role
  CodeBuildServiceRolePolicy:
    Properties:
      PolicyDocument:
        Statement:
          - Action:
              - logs:CreateLogGroup
              - logs:CreateLogStream
              - logs:PutLogEvents
            Effect: Allow
            Resource:
              - '*'
            Sid: CloudWatchLogsPolicy
          - Action:
              - s3:Get*
              - s3:Put*
              - s3:List*
            Effect: Allow
            Resource:
              - '*'
            Sid: S3Policy
        Version: '2012-10-17'
      PolicyName: CodeBuildServiceRolePolicy
      Roles:
        - !Ref 'CodeBuildServiceRole'
    Type: AWS::IAM::Policy
  CodePipelineServicePolicy:
    Properties:
      PolicyDocument:
        Statement:
          - Action: iam:PassRole
            Effect: Allow
            Resource: '*'
          - Action:
              - codebuild:StartBuild
              - codebuild:BatchGetBuilds
            Effect: Allow
            Resource:
              - !Join
                - ''
                - - 'arn:aws:codebuild:'
                  - !Ref 'AWS::Region'
                  - ':'
                  - !Ref 'AWS::AccountId'
                  - :project/
                  - !Ref 'BuildProject'
          - Action:
              - s3:List*
              - s3:Put*
              - s3:Get*
            Effect: Allow
            Resource:
              - '*'
            Sid: PipelineS3Policy
        Version: '2012-10-17'
      PolicyName: CodePipelineServicePolicy
      Roles:
        - !Ref 'CodePipelineServiceRole'
    Type: AWS::IAM::Policy
  CodePipelineServiceRole:
    Properties:
      AssumeRolePolicyDocument:
        Statement:
          - Action:
              - sts:AssumeRole
            Effect: Allow
            Principal:
              Service:
                - codepipeline.amazonaws.com
    Type: AWS::IAM::Role

  DemoArtifactBucket:
    Type: AWS::S3::Bucket

  Pipeline:
   Type: AWS::CodePipeline::Pipeline
   Properties:
    RoleArn: !GetAtt CodePipelineServiceRole.Arn
    Stages:
      -
        Name: Source
        Actions:
           -
             Name: SourceAction
             ActionTypeId:
               Version: '1'
               Owner: ThirdParty
               Category: Source
               Provider: GitHub
             OutputArtifacts:
               - Name: SourceArtifact
             RunOrder: 1
             Configuration:
               Owner: !Ref GitHubUser
               Repo: !Ref GitHubRepo
               PollForSourceChanges: 'False'
               Branch: master
               OAuthToken: !Ref GitHubAccessToken
      -
        Name: Build
        Actions:
          -
            Name: BuildingImage
            ActionTypeId:
                Category: Build
                Owner: AWS
                Provider: CodeBuild
                Version: '1'
            RunOrder: 1
            Configuration:
              ProjectName: !Ref BuildProject
              PrimarySource: SourceArtifact
            InputArtifacts:
               - Name: SourceArtifact
    ArtifactStore:
      Type: S3
      Location:
        Ref: DemoArtifactBucket

  AppPipelineWebhook:
    Type: AWS::CodePipeline::Webhook
    Properties:
      Authentication: GITHUB_HMAC
      AuthenticationConfiguration:
        SecretToken: !Ref GitHubAccessToken
      Filters:
        -
          JsonPath: "$.ref"
          MatchEquals: refs/heads/{Branch}
      TargetPipeline: !Ref Pipeline
      TargetAction: SourceAction
      TargetPipelineVersion: !GetAtt Pipeline.Version
      RegisterWithThirdParty: true

  HostingBucket1:
    Type: AWS::S3::Bucket
    Properties:
      WebsiteConfiguration:
        IndexDocument: index.html
        ErrorDocument: index.html

  HostingBucket1Policy:
    Type: AWS::S3::BucketPolicy
    Properties:
      Bucket: !Ref HostingBucket1
      PolicyDocument:
        Version: '2012-10-17'
        Statement:
          -
            Action:
                - "s3:Get*"
                - "s3:List*"
            Effect: "Allow"
            Resource:
                - !Sub '${HostingBucket1.Arn}/*'
                - !Sub '${HostingBucket1.Arn}'
            Principal:
                CanonicalUser: !GetAtt WebsiteOriginAccessIdentity.S3CanonicalUserId

  WebsiteOriginAccessIdentity:
    Type: AWS::CloudFront::CloudFrontOriginAccessIdentity
    Properties:
      CloudFrontOriginAccessIdentityConfig:
        Comment: !Sub "access-identity-${HostingBucket1}"

  WebsiteDistribution:
    Type: AWS::CloudFront::Distribution
    Properties:
      DistributionConfig:
        Comment: "Website distribution for solution"
        Origins:
            -
              Id: S3-solution-website
              DomainName: !Sub "${HostingBucket1}.s3-website-${AWS::Region}.amazonaws.com"
              CustomOriginConfig:
                  OriginProtocolPolicy: 'http-only'
        DefaultCacheBehavior:
            TargetOriginId: S3-solution-website
            AllowedMethods:
              - GET
              - HEAD
              - OPTIONS
              - PUT
              - POST
              - PATCH
              - DELETE
            CachedMethods:
              - GET
              - HEAD
              - OPTIONS
            ForwardedValues:
                QueryString: 'true'
            ViewerProtocolPolicy: redirect-to-https
        IPV6Enabled: 'true'
        ViewerCertificate:
            CloudFrontDefaultCertificate: 'true'
        Enabled: 'true'
        HttpVersion: 'http1.1'

Outputs:
  DashboardUrl:
    Description: The URL to the Dashboard.
    Value: !Sub 'https://${WebsiteDistribution.DomainName}/'